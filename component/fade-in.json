"<h1>頁面源代碼</h1>\n\n<div class=\"page-source\">\n\t[[module CSS]]<br />\n@import url(https://scp-zh-tr.wdfiles.com/local--code/component%3Afade-in/1);<br />\n@import url(&quot;https://scp-zh-tr.wdfiles.com/local--code/component%3Afade-in/{$speed}&quot;);<br />\n[[/module]]<br />\n<br />\n[[iftags +組件]]<br />\n[[div style=&quot;border: 1px solid #ddd; padding: 1em;&quot;]]<br />\n+ 這是什麼<br />\n<br />\n這是個能讓頁面中的所有事物平滑淡入，而非在頁面載入時就立即顯現出來的組件，<br />\n<br />\n淡入的時間點也可以交錯開來，也就是頁面內的每個要素一個接著一個出現，而不是全部同時。<br />\n<br />\n+ 使用方法<br />\n<br />\n於任何wiki頁面中加入以下代碼：<br />\n<br />\n[[div class=&quot;code&quot;]]<br />\n@@[[include :scp-zh-tr:component:fade-in speed=1]]@@<br />\n[[/div]]<br />\n<br />\nspeed=1：所有事物同時出現<br />\nspeed=2：每間格0.5秒才顯現出下一樣事物<br />\nspeed=3：每間格0.25秒才顯現出下一樣事物<br />\n<br />\n+ 使用限制<br />\n<br />\n淡入的效果僅適用於#page-content的直接子元素。它無法應用在巢狀元素（如位於引用塊或div裡面的內容）或頁面中的其它部分（像是側邊欄）之上。<br />\n<br />\n//（如果這與你頁面中的其它動畫相互衝突（像是，[[[component:acs-animation | ACS 動畫]]]），你可以簡單地把出問題的動畫元素用div包起來，然後你就能加以利用這個組件了。）//<br />\n<br />\n同時，它也僅會應用於你頁面中的前15個元素上面，而在那之後的元素就只會於同一時間顯現出來。這已經足夠讓讀者在打開頁面時，獲得一個平滑地載入體驗了，但若他們想要直接拉到底部去看，那他們就只能坐在那邊等上很長一段時間了。<br />\n[[/div]]<br />\n-----<br />\n<br />\n+ 原始碼<br />\n<br />\n[[code type=&quot;css&quot;]]<br />\n@media screen and (prefers-reduced-motion: no-preference) {<br />\n&nbsp;&nbsp;#page-title, #breadcrumbs, #page-content &gt; * {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;animation-name: fadeIn;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;animation-duration: 1s;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;animation-iteration-count: 1;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;animation-timing-function: ease-out;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;animation-fill-mode: backwards;<br />\n&nbsp;&nbsp;}<br />\n}<br />\n<br />\n#page-title { animation-delay: 0s; }<br />\n<br />\n@keyframes fadeIn {<br />\n&nbsp;&nbsp;from {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;opacity: 0;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;transform: translate(0,30px);<br />\n&nbsp;&nbsp;}<br />\n&nbsp;&nbsp;to {<br />\n&nbsp;&nbsp;&nbsp;&nbsp;opacity: 1;<br />\n&nbsp;&nbsp;&nbsp;&nbsp;transform: translate(0,0);<br />\n&nbsp;&nbsp;}<br />\n}<br />\n<br />\n:root {<br />\n&nbsp;&nbsp;--fade-in-delay: 0s;<br />\n}<br />\n<br />\n#page-content &gt; :nth-child(1) { animation-delay: calc(1 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(2) { animation-delay: calc(2 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(3) { animation-delay: calc(3 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(4) { animation-delay: calc(4 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(5) { animation-delay: calc(5 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(6) { animation-delay: calc(6 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(7) { animation-delay: calc(7 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(8) { animation-delay: calc(8 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(9) { animation-delay: calc(9 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(10) { animation-delay: calc(10 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(11) { animation-delay: calc(11 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(12) { animation-delay: calc(12 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(13) { animation-delay: calc(13 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(14) { animation-delay: calc(14 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(15) { animation-delay: calc(15 * var(--fade-in-delay)); }<br />\n#page-content &gt; :nth-child(n+15) { animation-delay: calc(16 * var(--fade-in-delay)); }<br />\n[[/code]]<br />\n<br />\n[[code type=&quot;css&quot;]]<br />\n:root {<br />\n&nbsp;&nbsp;&nbsp;--fade-in-delay: 0.5s;<br />\n}<br />\n[[/code]]<br />\n<br />\n[[code type=&quot;css&quot;]]<br />\n:root {<br />\n&nbsp;&nbsp;--fade-in-delay: 0.25s;<br />\n}<br />\n[[/code]]<br />\n<br />\n[[/iftags]]\n</div>\n"